{"version":3,"sources":["components/Game/gameComponents/PokemonCard/PokemonCard.js","components/Game/gameComponents/Result/Result.js","components/Game/Game.js","components/Home/Home.js","components/LeaderBoard/LeaderBoard.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","card","maxWidth","media","objectFit","margin","height","width","props","classes","react_default","a","createElement","Card_default","className","CardActionArea_default","CardMedia_default","component","alt","name","image","title","index_es","CardContent_default","Typography_default","style","textAlign","gutterBottom","variant","Result","Dialog_default","open","this","complete","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","count","DialogActions_default","Button_default","onClick","color","autoFocus","React","Component","Game","state","pokemon","clicked","componentDidMount","_this","setState","shuffle","Pokemon","handleClick","indexOf","firebase","database","ref","concat","uid","once","then","r","val","user","key","hasOwnProperty","scores","push","update","clickedArr","_this2","Grid_default","container","minHeight","marginLeft","spacing","gameComponents_Result_Result","map","index","item","xs","gameComponents_PokemonCard_PokemonCard","Home","expanded","handleChange","panel","event","Fragment","picture","src","root","ExpansionPanel_default","onChange","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","secondaryHeading","ExpansionPanelDetails_default","fontColor","theme","fontSize","typography","pxToRem","flexBasis","flexShrink","Object","defineProperty","palette","text","secondary","backgroundColor","counter","desc","b","orderBy","rows","numeric","disablePadding","label","LeaderBoardHead","createSortHandler","property","onRequestSort","_this$props","order","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","row","align","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","LeaderBoardToolbar","Toolbar_default","classNames","spacer","paddingRight","unit","highlight","type","main","lighten","light","primary","dark","flex","actions","LeaderBoard","data","page","rowsPerPage","key1","key2","_this3","highScore","Math","max","apply","toConsumableArray","numGames","length","console","log","handleRequestSort","handleChangePage","handleChangeRowsPerPage","target","value","_this$state","selected","emptyRows","min","Paper_default","LeaderBoard_LeaderBoardToolbar","tableWrapper","Table_default","table","LeaderBoard_LeaderBoardHead","TableBody_default","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","n","hover","scope","colSpan","TablePagination_default","rowsPerPageOptions","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","marginTop","paddingLeft","minWidth","overflowX","Navbar","toggleDrawer","changeOpen","sideList","list","List_default","Link","to","textDecoration","ListItem_default","button","ListItemText_default","Divider_default","AppBar_default","position","IconButton_default","menuButton","Menu_default","grow","isSignedIn","userName","auth","signOut","StyledFirebaseAuth_default","uiConfig","firebaseAuth","Drawer_default","tabIndex","role","onKeyDown","flexGrow","marginRight","fullList","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","App","unregisterAuthObserver","onAuthStateChanged","dbUser","displayName","BrowserRouter","components_Navbar_Navbar","Route","exact","path","components_Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f56e0bbd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\n\n\nconst styles = {\n  card: {\n    maxWidth: 200,\n  },\n  media: {\n    objectFit: 'center',\n    margin:'auto',\n    height:'100px',\n    width:'100px'\n  },\n};\n\nconst PokemonCard = (props) => {\n  const { classes } = props;\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt={props.name}\n          className={classes.media}\n          height=\"140\"\n          image={props.image}\n          title={props.name}\n        />\n        <Divider />\n        <CardContent>\n          <Typography style={{margin:'auto', textAlign:'center'}} gutterBottom variant=\"h5\" component=\"h2\">\n            {props.name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nPokemonCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PokemonCard);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass Result extends React.Component {\n\n  render() {\n    return (\n\n        <Dialog\n          open={this.props.complete}\n          onClose={this.props.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"well Done! Here are your results:\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {this.props.count}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.handleClose} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n    );\n  }\n}\n\nexport default Result;\n","import React, { Component } from 'react'\nimport Pokemon from './pokemon.json'\nimport PokemonCard from './gameComponents/PokemonCard'\nimport shuffle from 'shuffle-array'\nimport Grid from '@material-ui/core/Grid'\nimport Result from './gameComponents/Result'\nimport firebase from 'firebase'\n\nconst styles = {\n  pokeCard: {\n    width: '5vw'\n  }\n}\n\n\nclass Game extends Component {\n  state = {\n    pokemon: [],\n    clicked: [],\n    count: 0,\n    complete: false\n  }\n\n  componentDidMount = () => {\n    this.setState({ pokemon: shuffle(Pokemon) })\n  }\n  handleClick = name => {\n    if (this.state.clicked.indexOf(name) !== -1) {\n      firebase.database().ref(`/users/${this.props.uid}`).once('value')\n        .then(r => r.val())\n        .then(user => {\n          for (const key in user) {\n            if (user.hasOwnProperty(key)) {\n              let scores = user[key].scores ? user[key].scores : []\n\n              scores.push(this.state.count)\n              firebase.database().ref(`/users/${this.props.uid}/${key}`).update({ scores: scores })\n            }\n          }\n        })\n      this.setState({ complete: true })\n\n    } else {\n      let clickedArr = this.state.clicked\n      clickedArr.push(name)\n      let count = this.state.count\n      count++\n      this.setState({ pokemon: shuffle(Pokemon), clicked: clickedArr, count: count })\n    }\n  }\n\n  handleClose = () => {\n    this.setState({ complete: false })\n  }\n\n  render() {\n    return (\n\n      <Grid container style={{ minHeight: '92vh', marginLeft: '5%', width: 'auto' }} spacing={32}>\n        <Result count={this.state.count} handleClose={this.handleClose} complete={this.state.complete} />\n        {\n          this.state.pokemon.map((pokemon, index) => index < 16 ? <Grid onClick={() => this.handleClick(pokemon.name)} item xs={3}><PokemonCard name={pokemon.name} image={pokemon.image} /></Grid> : null)\n        }\n      </Grid>\n\n    )\n  }\n}\n\nexport default Game\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Grid from '@material-ui/core/Grid'\n\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n    color: '#FFF3B0'\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n    color: '#FFF3B0'\n  },\n  picture: {\n    width: '100%',\n    height: '71vh',\n    objectFit: 'cover'\n  },\n  panel: {\n    backgroundColor: \"#9e2A2b\"\n  },\n  fontColor: {\n    color: '#FFF3B0'\n  }\n})\n\nclass Home extends Component {\n  state = {\n    expanded: null,\n  }\n\n  handleChange = panel => (event, expanded) => {\n    this.setState({\n      expanded: expanded ? panel : false,\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { expanded } = this.state\n\n    return (\n      <>\n        \n\n        <Grid container spacing={0}>\n          <Grid item xs={12} >\n            <img className={classes.picture} src=\"https://i.pinimg.com/originals/1c/a6/e1/1ca6e1c35e2d884230242cc0326dbf28.jpg\" alt=\"Pokemon\" />\n          </Grid>\n          <div className={classes.root}>\n            <ExpansionPanel expanded={expanded === 'panel1'} onChange={this.handleChange('panel1')} className={classes.panel}>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={{color: '#FFF3B0'}}/>}>\n                <Typography className={classes.heading}>What Is This?</Typography>\n                <Typography className={classes.secondaryHeading}>Description of the Game</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography className={classes.fontColor}>\n                  This is a Pokedex Clicky Game where you can compete against other players for the longest run of correct choices.\n            </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')} className={classes.panel}>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={{ color: '#FFF3B0' }}/>}>\n                <Typography className={classes.heading}>How Do I Play?</Typography>\n                <Typography className={classes.secondaryHeading}>\n                  Instructions On How To Play The Pokemon Clicky Game\n            </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography className={classes.fontColor}>\n                  Your task is to click on the different pokemon that appear on the screen. Each time a new Pokemon is clicked, the screen will show a branch new list of 16 different pokemon from the entire Pokedex. You are awarded points for the amount of clicks you can go before you click the same Pokemon again. If you click the same Pokemon twice you lose and the game is over.\n            </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel expanded={expanded === 'panel3'} onChange={this.handleChange('panel3')} className={classes.panel}>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={{ color: '#FFF3B0' }}/>}>\n                <Typography className={classes.heading}>How Do I Begin?</Typography>\n                <Typography className={classes.secondaryHeading}>\n                  Steps To Start The Pokemon Clicky Game\n            </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography className={classes.fontColor}>\n                  Click the Sign Up button in the Navigation Bar to create an account. You will need to Sign-In with your Gmail Account. Once you sign in you will be able to start new games and view your ranking on the Leaderboad.\n            </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel expanded={expanded === 'panel4'} onChange={this.handleChange('panel4')} className={classes.panel}>\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={{ color: '#FFF3B0' }}/>}>\n                <Typography className={classes.heading}>Personal data?</Typography>\n                <Typography className={classes.secondaryHeading}>\n                  Reasons for Linking Gmail to The Pokemon Clicky Game\n            </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography className={classes.fontColor}>\n                  In order to keep your scores and stats secure to you as a user, we only require you sign in with Gmail because of its security and reliability. The Pokemon Clicky Game will never share your information with third parties or other users.\n            </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </div>\n        </Grid>\n      </>\n    )\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Home)\n","import React from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport { lighten } from '@material-ui/core/styles/colorManipulator'\nimport firebase from 'firebase'\n\nlet counter = 0\n\nfunction createData(name, highScore, numGames) {\n  counter += 1\n  return { id: counter, name, highScore, numGames }\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map(el => el[0])\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy)\n}\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'highScore', numeric: true, disablePadding: false, label: 'High Score' },\n  { id: 'numGames', numeric: true, disablePadding: false, label: 'Games Played' }\n]\n\nclass LeaderBoardHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property)\n  }\n\n  render() {\n    const { order, orderBy, rowCount } = this.props\n\n    return (\n      <TableHead>\n        <TableRow style={{ width: '100%' }}>\n          <TableCell padding=\"checkbox\">\n            {rows.map(row => {\n              return (\n                <TableCell\n                  key={row.id}\n                  align={row.numeric ? 'right' : 'left'}\n                  padding={row.disablePadding ? 'none' : 'default'}\n                  sortDirection={orderBy === row.id ? order : false}\n                >\n                  <Tooltip\n                    title=\"Sort\"\n                    placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                    enterDelay={300}\n                  >\n                    <TableSortLabel\n                      active={orderBy === row.id}\n                      direction={order}\n                      onClick={this.createSortHandler(row.id)}\n                    >\n                      {row.label}\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              )\n            }, this)}\n          </TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nLeaderBoardHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n})\n\nlet LeaderBoardToolbar = props => {\n  const { classes } = props\n\n  return (\n    <Toolbar\n      className={classNames(classes.root)}\n    >\n      <div className={classes.title}>\n        <Typography variant=\"h6\" id=\"tableTitle\">\n          LeaderBoard\n          </Typography>\n      </div>\n      <div className={classes.spacer} />\n    </Toolbar>\n  )\n}\n\nLeaderBoardToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n}\n\nLeaderBoardToolbar = withStyles(toolbarStyles)(LeaderBoardToolbar)\n\nconst styles = theme => ({\n  root: {\n    width: '50%',\n    margin: 'auto',\n    marginTop: theme.spacing.unit * 3,\n    paddingLeft: '10px',\n    paddingRight: '10px'\n  },\n  table: {\n    minWidth: 400,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n})\n\nclass LeaderBoard extends React.Component {\n  state = {\n    order: 'desc',\n    orderBy: 'highScore',\n    data: [],\n    page: 0,\n    rowsPerPage: 5,\n  }\n\n  componentDidMount = () => {\n    firebase.database().ref('/users').once('value')\n      .then(r => r.val())\n      .then(user => {\n        for (const key1 in user) {\n          if (user.hasOwnProperty(key1)) {\n            for (const key2 in user[key1]) {\n              if (user[key1].hasOwnProperty(key2)) {\n                let scores = user[key1][key2].scores ? user[key1][key2].scores : []\n                let data = this.state.data\n                data.push(createData(user[key1][key2].name, Math.max(...scores), scores.length))\n                console.log(data)\n                this.setState({ data: data })\n              }\n            }\n\n          }\n        }\n      })\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property\n    let order = 'desc'\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc'\n    }\n\n    this.setState({ order, orderBy })\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value })\n  }\n\n\n  render() {\n    const { classes } = this.props\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage)\n\n    return (\n      <div style={{ minHeight: '92vh' }}>\n        <Paper className={classes.root}>\n          <LeaderBoardToolbar />\n          <div className={classes.tableWrapper}>\n            <Table className={classes.table} aria-labelledby=\"tableTitle\">\n              <LeaderBoardHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                rowCount={data.length}\n              />\n              <TableBody>\n                {stableSort(data, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    return (\n                      <TableRow\n                        hover\n                        key={n.id}\n                      >\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          {n.name}\n                        </TableCell>\n                        <TableCell align=\"left\">{n.highScore}</TableCell>\n                        <TableCell align=\"left\">{n.numGames}</TableCell>\n                      </TableRow>\n                    )\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={data.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              'aria-label': 'Previous Page',\n            }}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page',\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    )\n  }\n}\n\nLeaderBoard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(LeaderBoard)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link } from 'react-router-dom'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1,\n    color: '#FFF3B0'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n}\n\nclass Navbar extends Component {\n  state = {\n    open: false\n  }\n\n  toggleDrawer = changeOpen => {\n    // console.log(changeOpen)\n    this.setState({ open: changeOpen })\n  }\n\n  render() {\n    const { classes } = this.props\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <Link to='/' style={{ color: 'black', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary='Home' />\n            </ListItem>\n          </Link>\n          <Link to='/game' style={{ color: 'black', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary='New Game' />\n            </ListItem>\n          </Link>\n          <Link to='/leaderboard' style={{ color: 'black', textDecoration: 'none' }}>\n            <ListItem button>\n              <ListItemText primary='Leaderboard' />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n      </div>\n    )\n    return (\n      <div className={classes.root}>\n        <AppBar position='static' style={{ backgroundColor: '#9e2A2b' }}>\n          <Toolbar>\n            <IconButton onClick={() => this.toggleDrawer(true)} className={classes.menuButton} style={{ color: '#FFF3B0' }} color='inherit' aria-label='Menu'>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant='h6' color='inherit' className={classes.grow}>\n              Pokemon Click Game\n            </Typography>\n            {\n              this.props.isSignedIn ? (\n                <>\n                  <Button style={{\n                    color: '#FFF3B0'}}>\n                    {this.props.userName}\n                  </Button>\n                  <Link to='/' style={{ color: '#FFF3B0', textDecoration: 'none' }}>\n                    <Button color='inherit'>Home\n                    </Button>\n                  </Link>\n                  <Link to='/game' style={{ color: '#FFF3B0', textDecoration: 'none' }}>\n                    <Button color='inherit'>\n                      New Game\n                    </Button>\n                  </Link>\n                  <Link to='/leaderboard' style={{ color: '#FFF3B0', textDecoration: 'none' }}>\n                    <Button color='inherit'>\n                      Leaderboard\n                    </Button>\n                  </Link>\n                  <Link to='/' style={{ color: '#FFF3B0', textDecoration: 'none' }}>\n                    <Button onClick={() => firebase.auth().signOut()} color='inherit'>\n                      Sign Out\n                    </Button>\n                  </Link>\n                </>\n              ) :\n                <StyledFirebaseAuth uiConfig={this.props.uiConfig} firebaseAuth={firebase.auth()} />\n            }\n            {/* <Button color='inherit'>Login</Button> */}\n            <Drawer open={this.state.open} onClose={() => this.toggleDrawer(false)}>\n              <div\n                tabIndex={0}\n                role='button'\n                onClick={() => this.toggleDrawer(false)}\n                onKeyDown={() => this.toggleDrawer(false)}\n              >\n                {sideList}\n              </div>\n            </Drawer>\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Navbar)\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Game from './components/Game'\nimport Home from './components/Home'\nimport LeaderBoard from './components/LeaderBoard'\nimport Navbar from './components/Navbar'\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBOwOqfO9Jb2wC98cOReQyUL9lUixOVuCM\",\n  authDomain: \"pokemonclickygame-75db5.firebaseapp.com\",\n  databaseURL: \"https://pokemonclickygame-75db5.firebaseio.com\",\n  projectId: \"pokemonclickygame-75db5\",\n  storageBucket: \"pokemonclickygame-75db5.appspot.com\",\n  messagingSenderId: \"171203273936\"\n})\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ]\n}\n\nclass App extends Component {\n\n  state = {\n    isSignedIn: false,\n    name: '',\n    uid: ''\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => this.setState({ isSignedIn: !!user })\n    )\n    firebase.auth().onAuthStateChanged(user => {\n      firebase.database().ref(`/users/${user.uid}`).once('value')\n      .then(r => r.val())\n      .then(dbUser => {\n        this.setState({name:user.displayName , uid: user.uid })\n        if(!dbUser) {\n          firebase.database().ref(`/users/${user.uid}`).push({\n            name: user.displayName,\n            scores :[]\n          })\n        }\n      })\n    })\n  }\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver()\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <div style={{ backgroundColor: '#9e2A2b' }}>\n            <Navbar uiConfig={uiConfig} isSignedIn={this.state.isSignedIn} userName={this.state.name} />\n            <Route exact path='/' component={Home} />\n            <Route path='/game' component={() => <Game uid={this.state.uid} />} />\n            <Route path='/leaderboard' component={LeaderBoard} />\n          </div>\n        </Router>\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}